services:
  web:
    container_name: web
    hostname: web
    restart: on-failure
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - mongodb
    networks:
      - internal_proxy
    env_file:
      - .env

  postgres:
    image: 'docker.io/postgres:${POSTGRES_TAG_VERSION:-latest}'
    container_name: postgres
    hostname: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD:-root}"
    networks:
      - internal_proxy
    volumes:
      - ./data/pg-data:/var/lib/postgresql/data/
    env_file:
      - .env

  setup_migration:
    container_name: setup_migration
    hostname: setup_migration
    restart: on-failure
    build:
      context: .
      dockerfile: Dockerfile
    command: [ "bash", "./scripts/setup_migration.sh" ]
    depends_on:
      - postgres
    networks:
      - internal_proxy
    env_file:
      - .env

  postgres_pgadmin:
    image: 'docker.io/dpage/pgadmin4:${PGADMIN_TAG_VERSION:-latest}'
    container_name: postgres_pgadmin
    hostname: postgres_pgadmin
    restart: always
    ports:
      - "8001:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: "${PGADMIN_DEFAULT_EMAIL:-default@example.com}"
      PGADMIN_DEFAULT_PASSWORD: "${PGADMIN_DEFAULT_PASSWORD:-password}"
    networks:
      - internal_proxy
    volumes:
      - pgadmin-data:/var/lib/pgadmin/
    env_file:
      - .env

  redis:
    image: "redis:${REDIS_TAG_VERSION:-latest}"
    container_name: redis
    hostname: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: [ "redis-server", "--appendonly", "yes" ]
    restart: unless-stopped
    env_file:
      - .env
    networks:
      - internal_proxy

  mongodb:
    image: "mongo:${MONGODB_TAG_VERSION:-4.4}"
    container_name: mongodb
    hostname: mongodb
    restart: unless-stopped
    volumes:
      - ./data/mongo_data:/data/db
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_USERNAME:-username}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_PASSWORD:-password}
    command:
      - --bind_ip_all
      - --auth
    env_file:
      - .env
    networks:
      - internal_proxy

  celery_worker:
    container_name: celery_worker
    hostname: celery_worker
    restart: on-failure
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - web
      - redis
    networks:
      - internal_proxy
    env_file:
      - .env
    command: ["bash", "./scripts/celeryWorker.sh"]

  celery_beat:
    container_name: celery_beat
    hostname: celery_beat
    restart: on-failure
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - web
      - redis
    networks:
      - internal_proxy
    env_file:
      - .env
    command: ["bash", "./scripts/celeryBeat.sh"]

volumes:
  pg-data:
  pgadmin-data:
  redis-data:
  mongo_data:

networks:
  internal_proxy:
